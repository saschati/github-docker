name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  work_data:
    name: Setters workflow job data
    runs-on: ubuntu-latest
    outputs:
      is_need_docker_build: ${{ steps.set_variable_by_files_diff.outputs.is_need_docker_build }}
      sha_short: ${{ steps.set_git_sha_short.outputs.sha_short }}
    steps:
      - id: files
        uses: jitterbit/get-changed-files@v1

      - id: set_variable_by_files_diff
        run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            if [[ $changed_file == app/docker/* ]]; then
                echo "is_need_docker_build=true" >> $GITHUB_OUTPUT
                break
            fi
          done

      - id: set_git_sha_short
        run: |
          echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT


  build-and-push-image-php-fpm:
    name: Build and push docker images php fpm
    if: needs.work_data.outputs.is_need_docker_build == 'true'
    runs-on: ubuntu-latest
    needs: [work_data]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker php-fpm
        id: meta-php-fpm
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=php-fpm
            type=sha,format=short,prefix=php-fpm-

      - name: Build and push Docker php-fpm image
        uses: docker/build-push-action@v5
        with:
          context: ./app/docker
          file: ./app/docker/development/php-fpm/Dockerfile
          push: true
          tags: ${{ steps.meta-php-fpm.outputs.tags }}
          labels: ${{ steps.meta-php-fpm.outputs.labels }}

  build-and-push-image-php-cli:
    name: Build and push docker images php cli
    if: needs.work_data.outputs.is_need_docker_build == 'true'
    runs-on: ubuntu-latest
    needs: [work_data]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker php-cli
        id: meta-php-cli
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=php-cli
            type=sha,format=short,prefix=php-cli-

      - name: Build and push Docker php-cli image
        uses: docker/build-push-action@v5
        with:
          context: ./app/docker
          file: ./app/docker/development/php-cli/Dockerfile
          push: true
          tags: ${{ steps.meta-php-cli.outputs.tags }}
          labels: ${{ steps.meta-php-cli.outputs.labels }}

  do-something-after-docker-build:
    name: Do something after all the docker images have faded
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ work_data, build-and-push-image-php-fpm, build-and-push-image-php-cli ]

    steps:
      - name: Show work data only if docker build image
        if: needs.work_data.outputs.is_need_docker_build == 'true'
        run: |
          echo "Is Need Docker Build ${{needs.work_data.outputs.is_need_docker_build}}"

      - name: Show work data
        run: |
          echo "Show short sha ${{needs.work_data.outputs.sha_short}}"